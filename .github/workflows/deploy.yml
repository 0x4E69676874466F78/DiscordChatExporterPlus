name: main

on:
  workflow_dispatch:
  push:
    branches:
      - master
    tags:
      - "*"

env:
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
  DOTNET_NOLOGO: true
  DOTNET_CLI_TELEMETRY_OPTOUT: true

jobs:
  pack:
    if: ${{ github.ref_type == 'tag' }}

    strategy:
      matrix:
        app:
          - DiscordChatExporter.Cli
          - DiscordChatExporter.Gui
        rid:
          - win-arm64
          - win-x86
          - win-x64
          - linux-arm
          - linux-arm64
          - linux-musl-x64
          - linux-x64
          - osx-arm64
          - osx-x64
        include:
          - app: DiscordChatExporter.Cli
            asset: DiscordChatExporterPlus.Cli
          - app: DiscordChatExporter.Gui
            # GUI assets aren't suffixed, unlike the CLI assets
            asset: DiscordChatExporterPlus

    runs-on: ${{ startsWith(matrix.rid, 'win-') && 'windows-latest' || startsWith(matrix.rid, 'osx-') && 'macos-latest' || 'ubuntu-latest' }}
    timeout-minutes: 10

    permissions:
      actions: write
      contents: read

    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Install .NET
        uses: actions/setup-dotnet@87b7050bc53ea08284295505d98d2aa94301e852 # v4.2.0
        with:
          dotnet-version: 9.0.x

      - name: Publish app
        run: >
          dotnet publish ${{ matrix.app }}
          -p:Version=${{ github.ref_type == 'tag' && github.ref_name || format('999.9.9-ci-{0}', github.sha) }}
          --output ${{ matrix.app }}/bin/publish/
          --configuration Release
          --runtime ${{ matrix.rid }}
          --self-contained

      - name: Upload artifacts
        uses: actions/upload-artifact@6f51ac03b9356f520e9adb1b1b7802705f340c2b # v4.5.0
        with:
          name: ${{ matrix.asset }}.${{ matrix.rid }}
          path: ${{ matrix.app }}/bin/publish/
          if-no-files-found: error

  release:
    needs: pack

    runs-on: ubuntu-latest
    timeout-minutes: 10

    permissions:
      contents: write

    steps:
      - name: Create release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: >
          gh release create ${{ github.ref_name }}
          --repo ${{ github.event.repository.full_name }}
          --title ${{ github.ref_name }}
          --generate-notes
          --verify-tag

  deploy:
    needs: release

    strategy:
      matrix:
        app:
          - DiscordChatExporter.Cli
          - DiscordChatExporter.Gui
        rid:
          - win-arm64
          - win-x86
          - win-x64
          - linux-arm
          - linux-arm64
          - linux-musl-x64
          - linux-x64
          - osx-arm64
          - osx-x64
        include:
          - app: DiscordChatExporter.Cli
            asset: DiscordChatExporterPlus.Cli
          - app: DiscordChatExporter.Gui
            # GUI assets aren't suffixed, unlike the CLI assets
            asset: DiscordChatExporterPlus

    runs-on: ubuntu-latest
    timeout-minutes: 10

    permissions:
      actions: read
      contents: write

    steps:
      - name: Download artifacts
        uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 # v4.1.8
        with:
          name: ${{ matrix.asset }}.${{ matrix.rid }}
          path: ${{ matrix.app }}/

      - name: Set permissions
        if: ${{ !startsWith(matrix.rid, 'win-') }}
        run: chmod +x ${{ matrix.app }}/${{ matrix.asset }}

      - name: Create package
        # Change into the artifacts directory to avoid including the directory itself in the zip archive
        working-directory: ${{ matrix.app }}/
        run: zip -r ../${{ matrix.asset }}.${{ matrix.rid }}.zip .

      - name: Upload release asset
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: >
          gh release upload ${{ github.ref_name }}
          ${{ matrix.asset }}.${{ matrix.rid }}.zip
          --repo ${{ github.event.repository.full_name }}
